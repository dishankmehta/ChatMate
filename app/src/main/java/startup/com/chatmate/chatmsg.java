package startup.com.chatmate;// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: startup.com.chatmate.chatmsg.proto at 4:1
import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class chatmsg extends Message<chatmsg, chatmsg.Builder> {
  public static final ProtoAdapter<chatmsg> ADAPTER = new ProtoAdapter_chatmsg();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_MSGTEXT = "";

  public static final String DEFAULT_USERNAME = "";

  public static final String DEFAULT_TIMESTAMP = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String msgtext;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REQUIRED
  )
  public final String username;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String timestamp;

  public chatmsg(String msgtext, String username, String timestamp) {
    this(msgtext, username, timestamp, ByteString.EMPTY);
  }

  public chatmsg(String msgtext, String username, String timestamp, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.msgtext = msgtext;
    this.username = username;
    this.timestamp = timestamp;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.msgtext = msgtext;
    builder.username = username;
    builder.timestamp = timestamp;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof chatmsg)) return false;
    chatmsg o = (chatmsg) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(msgtext, o.msgtext)
        && Internal.equals(username, o.username)
        && Internal.equals(timestamp, o.timestamp);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (msgtext != null ? msgtext.hashCode() : 0);
      result = result * 37 + (username != null ? username.hashCode() : 0);
      result = result * 37 + (timestamp != null ? timestamp.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (msgtext != null) builder.append(", msgtext=").append(msgtext);
    if (username != null) builder.append(", username=").append(username);
    if (timestamp != null) builder.append(", timestamp=").append(timestamp);
    return builder.replace(0, 2, "startup.com.chatmate.chatmsg{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<chatmsg, Builder> {
    public String msgtext;

    public String username;

    public String timestamp;

    public Builder() {
    }

    public Builder msgtext(String msgtext) {
      this.msgtext = msgtext;
      return this;
    }

    public Builder username(String username) {
      this.username = username;
      return this;
    }

    public Builder timestamp(String timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    @Override
    public chatmsg build() {
      if (msgtext == null
          || username == null) {
        throw Internal.missingRequiredFields(msgtext, "msgtext",
            username, "username");
      }
      return new chatmsg(msgtext, username, timestamp, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_chatmsg extends ProtoAdapter<chatmsg> {
    ProtoAdapter_chatmsg() {
      super(FieldEncoding.LENGTH_DELIMITED, chatmsg.class);
    }

    @Override
    public int encodedSize(chatmsg value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.msgtext)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.username)
          + (value.timestamp != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.timestamp) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, chatmsg value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.msgtext);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.username);
      if (value.timestamp != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.timestamp);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public chatmsg decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.msgtext(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.username(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.timestamp(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public chatmsg redact(chatmsg value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
